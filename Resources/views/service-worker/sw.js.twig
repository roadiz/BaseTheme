importScripts('https://storage.googleapis.com/workbox-cdn/releases/5.1.2/workbox-sw.js')

// Set cache name with project and Theme Version
{% set cacheName = [
    head.themeName ?? 'roadiz',
    app.debug ? 'debug' : 'prod',
    head.themeVersion ?? '0.1.0'
] %}
const CACHE_NAME = "{{ cacheName|join('-')|replace({' ':'-'})|lower }}"
const OFFLINE_URL = '/offline.html'
const PAGES_TO_PRELOAD = [
{% for page in pages|filter(p => p.translation.Available and not p.node.Home) %}
    '{{ path(page) }}',
{% endfor %}
    // OFFLINE_URL
]

if (workbox) {
    console.log(`Yay! Workbox is loaded ðŸŽ‰`)

    self.addEventListener('install', event => {
        event.waitUntil(
            caches.open(CACHE_NAME).then(cache => {
                return cache.addAll(PAGES_TO_PRELOAD).then(() => self.skipWaiting())
            })
        )
    })

    self.addEventListener('activate', event => {
        event.waitUntil(self.clients.claim());
    });

    const strategy = new workbox.strategies.NetworkFirst({
        cacheName: CACHE_NAME,
        plugins: [
            new workbox.expiration.ExpirationPlugin({
                maxEntries: 30,
                maxAgeSeconds: 24 * 60 * 60 // 1 day
            })
        ]
    })

    const imgStrategy = new workbox.strategies.CacheFirst({
        cacheName: CACHE_NAME + '-images',
        plugins: [
            new workbox.expiration.ExpirationPlugin({
                maxEntries: 60,
                maxAgeSeconds: 30 * 24 * 60 * 60, // 30 Days
            })
        ]
    })
    {# If you want to display offline page uncomment following route #}
    {#workbox.routing.registerRoute(new RegExp('/'), ({ event }) => {
        return strategy
            .handle({ event })
            .then(response => response || caches.match(OFFLINE_URL))
            .catch((e) => caches.match(OFFLINE_URL))
    })#}
    workbox.routing.registerRoute(new RegExp('/'), strategy)
    workbox.routing.registerRoute(/\.(?:png|gif|jpg|jpeg|svg|webp)$/, imgStrategy)
} else {
    console.log(`Boo! Workbox didn't load ðŸ˜¬`)
}

